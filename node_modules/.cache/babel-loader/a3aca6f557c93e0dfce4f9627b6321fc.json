{"ast":null,"code":"var _jsxFileName = \"G:\\\\CryptoRDEX\\\\src\\\\components\\\\Account.jsx\",\n    _s = $RefreshSig$();\n\nimport { useMoralis } from \"react-moralis\";\nimport { getEllipsisTxt } from \"helpers/formatters\";\nimport Blockie from \"./Blockie\";\nimport { Button, Card, Modal } from \"antd\";\nimport { useState } from \"react\";\nimport Address from \"./Address/Address\";\nimport { SelectOutlined } from \"@ant-design/icons\";\nimport { getExplorer } from \"helpers/networks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  account: {\n    height: \"42px\",\n    padding: \"0 15px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"fit-content\",\n    borderRadius: \"12px\",\n    backgroundColor: \"rgb(244, 244, 244)\",\n    cursor: \"pointer\"\n  },\n  text: {\n    color: \"#21BF96\"\n  }\n};\n\nfunction Account() {\n  _s();\n\n  const {\n    authenticate,\n    isAuthenticated,\n    logout,\n    account,\n    chainId\n  } = useMoralis();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.account,\n      onClick: () => authenticate({\n        signingMessage: \"Hello World!\"\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.text,\n        children: \"Authenticate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.account,\n      onClick: () => setIsModalVisible(true),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginRight: \"5px\",\n          ...styles.text\n        },\n        children: getEllipsisTxt(account, 6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Blockie, {\n        currentWallet: true,\n        scale: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: isModalVisible,\n      footer: null,\n      onCancel: () => setIsModalVisible(false),\n      bodyStyle: {\n        padding: \"15px\",\n        fontSize: \"17px\",\n        fontWeight: \"500\"\n      },\n      style: {\n        fontSize: \"16px\",\n        fontWeight: \"500\"\n      },\n      width: \"400px\",\n      children: [\"Account\", /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          marginTop: \"10px\",\n          borderRadius: \"1rem\"\n        },\n        bodyStyle: {\n          padding: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Address, {\n          avatar: \"left\",\n          size: 6,\n          copyable: true,\n          style: {\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\",\n            padding: \"0 10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${getExplorer(chainId)}/address/${account}`,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: [/*#__PURE__*/_jsxDEV(SelectOutlined, {\n              style: {\n                marginRight: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), \"View on Explorer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        type: \"primary\",\n        style: {\n          width: \"100%\",\n          marginTop: \"10px\",\n          borderRadius: \"0.5rem\",\n          fontSize: \"16px\",\n          fontWeight: \"500\"\n        },\n        onClick: () => {\n          logout();\n          setIsModalVisible(false);\n        },\n        children: \"Disconnect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Account, \"VpNsXaGTVlhwtKz37C8/RwsgXts=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["G:/CryptoRDEX/src/components/Account.jsx"],"names":["useMoralis","getEllipsisTxt","Blockie","Button","Card","Modal","useState","Address","SelectOutlined","getExplorer","styles","account","height","padding","display","justifyContent","alignItems","width","borderRadius","backgroundColor","cursor","text","color","Account","authenticate","isAuthenticated","logout","chainId","isModalVisible","setIsModalVisible","signingMessage","marginRight","fontSize","fontWeight","marginTop"],"mappings":"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","sourcesContent":["import { useMoralis } from \"react-moralis\";\r\nimport { getEllipsisTxt } from \"helpers/formatters\";\r\nimport Blockie from \"./Blockie\";\r\nimport { Button, Card, Modal } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport Address from \"./Address/Address\";\r\nimport { SelectOutlined } from \"@ant-design/icons\";\r\nimport { getExplorer } from \"helpers/networks\";\r\nconst styles = {\r\n  account: {\r\n    height: \"42px\",\r\n    padding: \"0 15px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"fit-content\",\r\n    borderRadius: \"12px\",\r\n    backgroundColor: \"rgb(244, 244, 244)\",\r\n    cursor: \"pointer\",\r\n  },\r\n  text: {\r\n    color: \"#21BF96\",\r\n  },\r\n};\r\n\r\nfunction Account() {\r\n  const { authenticate, isAuthenticated, logout, account, chainId } = useMoralis();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div style={styles.account} onClick={() => authenticate({ signingMessage: \"Hello World!\" })}>\r\n        <p style={styles.text}>Authenticate</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={styles.account} onClick={() => setIsModalVisible(true)}>\r\n        <p style={{ marginRight: \"5px\", ...styles.text }}>{getEllipsisTxt(account, 6)}</p>\r\n        <Blockie currentWallet scale={3} />\r\n      </div>\r\n      <Modal\r\n        visible={isModalVisible}\r\n        footer={null}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        bodyStyle={{\r\n          padding: \"15px\",\r\n          fontSize: \"17px\",\r\n          fontWeight: \"500\",\r\n        }}\r\n        style={{ fontSize: \"16px\", fontWeight: \"500\" }}\r\n        width=\"400px\"\r\n      >\r\n        Account\r\n        <Card\r\n          style={{\r\n            marginTop: \"10px\",\r\n            borderRadius: \"1rem\",\r\n          }}\r\n          bodyStyle={{ padding: \"15px\" }}\r\n        >\r\n          <Address avatar=\"left\" size={6} copyable style={{ fontSize: \"20px\" }} />\r\n          <div style={{ marginTop: \"10px\", padding: \"0 10px\" }}>\r\n            <a href={`${getExplorer(chainId)}/address/${account}`} target=\"_blank\" rel=\"noreferrer\">\r\n              <SelectOutlined style={{ marginRight: \"5px\" }} />\r\n              View on Explorer\r\n            </a>\r\n          </div>\r\n        </Card>\r\n        <Button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          style={{\r\n            width: \"100%\",\r\n            marginTop: \"10px\",\r\n            borderRadius: \"0.5rem\",\r\n            fontSize: \"16px\",\r\n            fontWeight: \"500\",\r\n          }}\r\n          onClick={() => {\r\n            logout();\r\n            setIsModalVisible(false);\r\n          }}\r\n        >\r\n          Disconnect Wallet\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Account;\r\n"]},"metadata":{},"sourceType":"module"}