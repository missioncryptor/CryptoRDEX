{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\nexport const useERC20Transfers = () => {\n  _s();\n\n  const {\n    account\n  } = useMoralisWeb3Api();\n  const {\n    isInitialized,\n    account: walletAddress,\n    chainId\n  } = useMoralis();\n  const [ERC20Transfers, setERC20Transfers] = useState();\n  useEffect(() => {\n    if (isInitialized) fetchERC20Transfers().then(result => setERC20Transfers(result)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isInitialized, chainId, walletAddress]);\n\n  const fetchERC20Transfers = async () => {\n    return await account.getTokenTransfers({\n      address: walletAddress,\n      chain: chainId\n    }).then(result => result.result);\n  };\n\n  return {\n    fetchERC20Transfers,\n    ERC20Transfers,\n    chainId\n  };\n};\n\n_s(useERC20Transfers, \"KPiybNzxnBZ8VhzORctRnKNXlVA=\", false, function () {\n  return [useMoralisWeb3Api, useMoralis];\n});","map":{"version":3,"sources":["G:/CryptoRDEX/src/hooks/useERC20Transfers.js"],"names":["useEffect","useState","useMoralis","useMoralisWeb3Api","useERC20Transfers","account","isInitialized","walletAddress","chainId","ERC20Transfers","setERC20Transfers","fetchERC20Transfers","then","result","getTokenTransfers","address","chain"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,eAA9C;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAcF,iBAAiB,EAArC;AACA,QAAM;AAAEG,IAAAA,aAAF;AAAiBD,IAAAA,OAAO,EAAEE,aAA1B;AAAyCC,IAAAA;AAAzC,MAAqDN,UAAU,EAArE;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,EAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,aAAJ,EAAmBK,mBAAmB,GAAGC,IAAtB,CAA4BC,MAAD,IAAYH,iBAAiB,CAACG,MAAD,CAAxD,EADL,CAEd;AACD,GAHQ,EAGN,CAACP,aAAD,EAAgBE,OAAhB,EAAyBD,aAAzB,CAHM,CAAT;;AAKA,QAAMI,mBAAmB,GAAG,YAAY;AACtC,WAAO,MAAMN,OAAO,CAACS,iBAAR,CAA0B;AAAEC,MAAAA,OAAO,EAAER,aAAX;AAA0BS,MAAAA,KAAK,EAAER;AAAjC,KAA1B,EAAsEI,IAAtE,CAA4EC,MAAD,IAAYA,MAAM,CAACA,MAA9F,CAAb;AACD,GAFD;;AAGA,SAAO;AAAEF,IAAAA,mBAAF;AAAuBF,IAAAA,cAAvB;AAAuCD,IAAAA;AAAvC,GAAP;AACD,CAdM;;GAAMJ,iB;UACSD,iB,EACuCD,U","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\n\r\nexport const useERC20Transfers = () => {\r\n  const { account } = useMoralisWeb3Api();\r\n  const { isInitialized, account: walletAddress, chainId } = useMoralis();\r\n  const [ERC20Transfers, setERC20Transfers] = useState();\r\n\r\n  useEffect(() => {\r\n    if (isInitialized) fetchERC20Transfers().then((result) => setERC20Transfers(result));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isInitialized, chainId, walletAddress]);\r\n\r\n  const fetchERC20Transfers = async () => {\r\n    return await account.getTokenTransfers({ address: walletAddress, chain: chainId }).then((result) => result.result);\r\n  };\r\n  return { fetchERC20Transfers, ERC20Transfers, chainId };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}